package com.cn.taskmanagement.mapper;

import com.cn.taskmanagement.dto.TaskDto;
import com.cn.taskmanagement.model.Task;
import org.mapstruct.Mapper;
import org.mapstruct.Mapping;
import org.mapstruct.MappingTarget;
import org.mapstruct.Mappings;
import org.mapstruct.factory.Mappers;

/**
 * Mapper interface for converting between Task and TaskDto.
 */
@Mapper
public interface TaskMapper {
    // Singleton instance of the TaskMapper generated by MapStruct
    TaskMapper INSTANCE = Mappers.getMapper(TaskMapper.class);

    /**
     * Converts a Task entity to a TaskDto.
     *
     * @param task The Task entity to convert.
     * @return The corresponding TaskDto.
     */
    @Mappings({
            @Mapping(target = "project", source = "project"),
    })
    TaskDto taskToTaskDto(Task task);

    /**
     * Converts a TaskDto to a Task entity.
     *
     * @param taskDto The TaskDto to convert.
     * @return The corresponding Task entity.
     */
    Task taskDtoToTask(TaskDto taskDto);

    /**
     * Updates a Task entity based on the properties of a TaskDto.
     *
     * @param task    The existing Task entity to be updated.
     * @param taskDto The TaskDto containing updated properties.
     * @return The updated Task entity.
     */
    @Mappings({
            @Mapping(target = "id", ignore = true),
            @Mapping(target = "project", ignore = true),
            @Mapping(target = "title", source = "taskDto.title"),
            @Mapping(target = "description", source = "taskDto.description"),
            @Mapping(target = "status", source = "taskDto.status"),
            @Mapping(target = "priority", source = "taskDto.priority"),
            @Mapping(target = "deadline", source = "taskDto.deadline"),
            @Mapping(target = "project.id", source = "taskDto.projectId")
    })

    Task updateTaskFromDto(Task task, TaskDto taskDto);

    /**
     * Updates the project property of a Task entity based on the properties of a TaskDto.
     *
     * @param task    The existing Task entity to be updated.
     * @param taskDto The TaskDto containing updated project property.
     */
    @Mappings({
            @Mapping(target = "id", ignore = true),
            @Mapping(target = "project", ignore = true)
    })
    void updateTaskProjectFromDto(@MappingTarget Task task, TaskDto taskDto);

}